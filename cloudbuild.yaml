steps:


    - id: 'Gerando service-account-storage.json'
      name: 'gcr.io/cloud-builders/gcloud'
      args:
        - kms
        - decrypt
        - --ciphertext-file=./storage/credentials/google/service-account-testing.json.enc
        - --plaintext-file=./storage/credentials/google/service-account-testing.json
        - --keyring=testing-lesson
        - --key=service-account

    - id: "Rodando docker-compose"
      name: 'gcr.io/$PROJECT_ID/docker-compose:1.24.0'
      args: ['-f','docker-compose.prod.yaml','up','-d']
      env:
        - GOOGLE_CLOUD_PROJECT_ID=$PROJECT_ID
        - GOOGLE_CLOUD_KEY_FILE=service-account-storage.json
        - GOOGLE_CLOUD_STORAGE_BUCKET=code-micro-videos-jvum
        - GOOGLE_CLOUD_STORAGE_API_URI=https://storage.cloud.google.com/code-micro-videos-jvum
        - TESTING_PROD=true

    - id: "Rodando composer"
      name: 'gcr.io/cloud-builders/docker'
      args: ['exec','-t','app','composer','install']

    - id: "Copiando .env"
      name: 'gcr.io/cloud-builders/docker'
      args: ['exec','-t','app','cp','.env.example','.env']

    - id: "Copiando .env.testing"
      name: 'gcr.io/cloud-builders/docker'
      args: ['exec','-t','app','cp','.env.testing','.env.testing']

    - id: "Rodando key:generate"
      name: 'gcr.io/cloud-builders/docker'
      args: ['exec','-t','app','php','/var/www/artisan','key:generate']

    - id: "Rodando migrations"
      name: 'gcr.io/cloud-builders/docker'
      args: ['exec','-t','app','php','/var/www/artisan','migrate']

    - id: "Rodando Phpunit"
      name: 'gcr.io/cloud-builders/docker'
      args: ['exec','-t','app','php','/var/www/vendor/bin/phpunit','-c','/var/www/phpunit.xml']


        #gcloud kms encrypt --ciphertext-file=./storage/credentials/google/studyproject-278422-aeb6120ebfed.json --plaintext-file=./storage/credentials/google/studyproject-278422-aeb6120ebfed.json --location=global --keyring=service-account --key=service-account
